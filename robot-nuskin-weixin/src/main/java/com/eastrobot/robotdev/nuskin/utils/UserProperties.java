package com.eastrobot.robotdev.nuskin.utils;import java.io.BufferedInputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.util.Properties;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantReadWriteLock;import com.eastrobot.robotdev.utils.PropertiesUtil;/** *  * @author rickey * 解析user.properties配置文件中的内容. * 用于记录用户是否确认同意保密菜单。 * */public class UserProperties {	private static UserProperties p;	private static Properties props;	private static final ReentrantReadWriteLock rrwl = new ReentrantReadWriteLock();	private static final Lock writeLock = rrwl.writeLock();	private static final Lock readLock = rrwl.readLock();		private static String getFile()	{		String file = UserProperties.class.getResource("/").getPath() + "user.properties";		return file;	}	private Properties getProperties() {		System.out.println("--------读取配置文件---------");		String file = getFile();		System.out.println(file);		props = new Properties();		InputStream is;		try {			File f = new File(file);			FileInputStream fis = new FileInputStream(f);			is = new BufferedInputStream(fis);			props.load(is) ;			if(fis!=null)				fis.close();			if(is!=null)				is.close();		} catch (Exception e) {			e.printStackTrace();		}		return props;	}	public static String getValueByKey(String key){		readLock.lock();		String value="";		try {			if(p==null){				p=new UserProperties();			}			if(props==null){				props=p.getProperties();			}			value=props.getProperty(key);		} catch (Exception e) {		}finally{			readLock.unlock();		}		return value;	}		public static void setValueByKey(String key,String value)	{		writeLock.lock();	    try {	    	if(p==null){				p=new UserProperties();			}			if(props==null){				props=p.getProperties();			}					    OutputStream fos = new FileOutputStream(getFile());		    props.setProperty(key, value);		    props.store(fos, "Update '" + key+ "' value");		    if(fos!=null)		    	fos.close();		}catch (IOException e){		    System.err.println("Visit " + getFile() + " for updating "		    + key + " value error");	    }finally{	    	writeLock.unlock();	    }	}}